console.log('Record 1');

setTimeout(() => {
    console.log('Record 2');
        Promise.resolve().then(() => {
            setTimeout(() => {
                сonsole.log('Record 3');
                Promise.resolve().then(() => {
                    console.log('Record 4');
                });       
            });
        });       
});

console.log('Record 5');

Promise.resolve().then(() => 
    Promise.resolve().then(() => 
        console.log('Record 6')));

Ответ: 1 5 6 2 3 4

Сперва отрабатывает весь синхронный код (1, 5), затем промисы, затем таймауты, так как у них есть минимальная задержка. Заходим в промис
на строке 17, отрабатываем микротаск (6), далее идём в таймаут на строке 3. Там в микротаске сперва срабатывает синхронный код (2),
после чего мы заходим в промис на строке 5 с собственным микротаском. В нём аналогично сперва срабатывает синхронный код (3), после чего
уже ресолвится промис (4).
